
import boto3
import logging as log
import pyclamd
import pprint

class Scanner:

    def __init__(self, clamd_host, clamd_port, tagging, tags):
        self.clamd_host = clamd_host
        self.clamd_port = clamd_port
        self.tagging = tagging
        self.tags = tags
    
    def file_check(self, bucketname, object_key):

        s3_res = boto3.resource('s3')
        obj = s3_res.Object(bucketname, object_key)
        data = obj.get()

        log.info("Scanning: {type} {length} {key}".format(key=object_key, type=data['ContentType'], length=data['ContentLength']))

        clamd = pyclamd.ClamdNetworkSocket(host=self.clamd_host, port=int(self.clamd_port), timeout=None)
        result = clamd.scan_stream(data['Body'].read())
        if result != None:
            print("\x1b[31;21mALERT: Malware found: {type} {length} {key} {malware}\x1b[0m".format(
                key=object_key,
                type=data['ContentType'],
                length=data['ContentLength'],
                malware=result['stream'][1]
            ))
            self._tag_result(bucketname, object_key, self.tags['infected'])
        else:
            log.info("result: File {key} is OK".format(key=object_key))
            self._tag_result(bucketname, object_key, self.tags['clean'])

    def _tag_result(self, bucketname, object_key, result):
        if self.tagging == "True": 
            s3_client = boto3.client('s3')
            put_tags_response = s3_client.put_object_tagging(
                Bucket=bucketname,
                Key=object_key,
                Tagging={
                    'TagSet': [
                        {
                            'Key': 'scanresult',
                            'Value': result
                        },
                    ]
                }
            )